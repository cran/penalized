0.9-21
- Made storing of all cross-validated predictors in profL1 and profL2 optional.
- Implemented the predict function.
- Streamlined the cross-validated predictions, so that predictions are calculated and stored per fold rather than per subject.
- Fixed an input check bug that prevented counting process type input for survival data.
- Changed the default value of maxlambda1 in profL1 and optL1, so that maxlambda1 is now the maximal value at which any non-zero regressioncoefficient pops up in any cross-validation fold.
- Added positivity check for survival response
- Implemented the possibility of including an offset term
- Added .modelswitch and .predictswitch functions to reduce code duplication
- Implemented the Poisson model
- Implemented coef() as an alias for coefficients()
- Allowed factor response for the logistic model
- Changed the definition of the Riskset variable in the Cox model so that it is not nxn anymore but nxd, where d is the number of events.
- Added argument data=data to all calls to terms() in .checkinput() to allow the "." operator in formula objects.
- Solved a bug in .coxfit() arising in case of tied survival times
- More informative error message if penalized or unpenalized are given as a data.frame with non-numeric columns.
- More informative error message if plotpath is called with a penfit object with all zero regression coefficients.


0.9-20
- Solved a bug in .makeP that resulted in a wrong solution basis in case of a combination of L1 and L2 penalties with a high dimensional solution. Thanks to Martin Slawski for pointing out this bug for me. 
- Changed the index entry of the vignette from "penalized" to "Penalized user guide".


0.9-19
- Updated the show function for penfit objects so that it always gives the number of non-zero coefficients whenever any coefficient is exactly zero.
- Solved a numerical imprecision problem in .lasso() that arose when some variables were exactly duplicated.


0-9-18
- Added the posibility of putting a positivity constraint on all penalized covariates.
- Changed the illogical behavior that setting steps=k led to an output list of length k+1.


0-9.17
- New internal function .checkinput() does improved common input preprocessing for penalized(), cvl(), profL1(), profL2(), optL1() and optL2(), removing much code duplication. The function replaces .prepare() which previously did part of the common input preprocessing.
- Streamlining in .checkinput() also made the functions .lmgamma(), .coxgamma() and .logitgamma() obsolete.
- A new function .getFolds() for calculating cross-validation folds also removed much duplicated code.
- The possibility of giving different lambda1 or lambda2-values for different covariates has been removed, as it was badly implemented. The option may return in the future.


0.9-16
- Changed the input checks to allow the format penalized(response~unpenalized, penalized). This is in line with functions such as lme.
- Fixed a bug in .coxmerge() that resulted in alignment mistakes in the cross-validated predicted survival curves.
- Added the advice to the vignette to add an L2 penalty in case of multi-level factors.


0.9-15
- Fixed a bug in penalized() and all cvl-functions that sometimes caused name conflicts because the terms of user-supplied formulae would first be evaluated in the package name space. All eval() calls are now explicitly directed to the correct environment.


0.9-14
- New method basesurv() returns the baseline suvival.
- basehaz() now returns the baseline hazard instead of the baseline survival curve.
- The center argument in basehaz() and basesurv() implemented.
- linear.predictors() method added for penfit objects.
- Missing documentation of fitted.values() added.
- as.data.frame() method added for breslow objects.